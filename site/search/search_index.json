{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"dotfiles2 My Debian based dotfiles. TL;DR /bin/bash -c \" $( curl -fsSL https://raw.githubusercontent.com/nicholaswilde/dotfiles2/main/scripts/init.sh ) \" cd ~/git/nicholaswilde/dotfiles2 task dotfiles About Dotfiles are used to customize your system. The \"dotfiles\" name is derived from the configuration files in Unix-like systems that start with a dot (e.g. .bash_profile and .gitconfig). For normal users, this indicates these are not regular documents, and by default are hidden in directory listings. For power users, however, they are a core tool belt. - webpro This repo is used to manage my dotfiles by automating the backup and installation of them. This repo also backups a list of Homebrew formulas and apt packages that can be easily redeployed. The repo also uses a ubuntu-server Docker image as a virtual environment for testing. Inspiration Inspiration for this repository has been taken from jessfraz/dotfiles . \u200b License \u200b Apache 2.0 License \u200b Author \u200bThis project was started in 2022 by Nicholas Wilde .","title":"Home"},{"location":"#dotfiles2","text":"My Debian based dotfiles.","title":"dotfiles2"},{"location":"#tldr","text":"/bin/bash -c \" $( curl -fsSL https://raw.githubusercontent.com/nicholaswilde/dotfiles2/main/scripts/init.sh ) \" cd ~/git/nicholaswilde/dotfiles2 task dotfiles","title":"TL;DR"},{"location":"#about","text":"Dotfiles are used to customize your system. The \"dotfiles\" name is derived from the configuration files in Unix-like systems that start with a dot (e.g. .bash_profile and .gitconfig). For normal users, this indicates these are not regular documents, and by default are hidden in directory listings. For power users, however, they are a core tool belt. - webpro This repo is used to manage my dotfiles by automating the backup and installation of them. This repo also backups a list of Homebrew formulas and apt packages that can be easily redeployed. The repo also uses a ubuntu-server Docker image as a virtual environment for testing.","title":"About"},{"location":"#inspiration","text":"Inspiration for this repository has been taken from jessfraz/dotfiles .","title":"Inspiration"},{"location":"#license","text":"\u200b Apache 2.0 License","title":"\u200b License"},{"location":"#author","text":"\u200bThis project was started in 2022 by Nicholas Wilde .","title":"\u200b Author"},{"location":"configuration/","text":"Configuration init.sh Script Variables inside the script may be changed to customize the repo. Variable name Description Default value ORG_NAME The GitHub organization name nicholaswilde GIT_DIR The git directory in which the repo is is cloned ${HOME}/git/${ORG_NAME} EMAIL_ADDRESS The email address used to log into lastpass-cli ncwilde43@gmail.com REPO_NAME The name of the GitHub repository dotfiles2 REPO_URL The URL of the repository git@github.com:${ORG_NAME}/${REPO_NAME}.git REPO_DIR The directory to which the repo is locally cloned ${GIT_DIR}/${REPO_NAME} GPG_LPASS_ID The ID of the GPG lastpass-cli entry gpg GPG_LPASS_ATTACH_ID The attachment ID of the GPG lastpass-cli private key att-8017296795546256342-55097 SSH_LPASS_ID The ID of the SSH lastpass-cli entry ssh SSH_LPASS_ATTACH_ID The attachment ID of the SSH lastpass-cli private key att-4322045537695550419-20689 Dotfiles New dotfiles just need to be added to the root directory of the repo and task will then automatically add a symbolic link when task dotfiles is run. Config Files New config files need to be added to the .config repo directory and then the dotfiles task in Taskfile.yaml needs to be updated.","title":"Configuration"},{"location":"configuration/#configuration","text":"","title":"Configuration"},{"location":"configuration/#initsh-script","text":"Variables inside the script may be changed to customize the repo. Variable name Description Default value ORG_NAME The GitHub organization name nicholaswilde GIT_DIR The git directory in which the repo is is cloned ${HOME}/git/${ORG_NAME} EMAIL_ADDRESS The email address used to log into lastpass-cli ncwilde43@gmail.com REPO_NAME The name of the GitHub repository dotfiles2 REPO_URL The URL of the repository git@github.com:${ORG_NAME}/${REPO_NAME}.git REPO_DIR The directory to which the repo is locally cloned ${GIT_DIR}/${REPO_NAME} GPG_LPASS_ID The ID of the GPG lastpass-cli entry gpg GPG_LPASS_ATTACH_ID The attachment ID of the GPG lastpass-cli private key att-8017296795546256342-55097 SSH_LPASS_ID The ID of the SSH lastpass-cli entry ssh SSH_LPASS_ATTACH_ID The attachment ID of the SSH lastpass-cli private key att-4322045537695550419-20689","title":"init.sh Script"},{"location":"configuration/#dotfiles","text":"New dotfiles just need to be added to the root directory of the repo and task will then automatically add a symbolic link when task dotfiles is run.","title":"Dotfiles"},{"location":"configuration/#config-files","text":"New config files need to be added to the .config repo directory and then the dotfiles task in Taskfile.yaml needs to be updated.","title":"Config Files"},{"location":"development/","text":"Development Docker Ubuntu Server Image The ubuntu-server image may be used to help develop the repo. Task Manual task venv docker run -it --rm --entrypoint /bin/bash -u ubuntu -w /home/ubuntu nicholaswilde/ubuntu-server:22.10 The default username and password for the ubuntu-server image is as follows: Username Password ubuntu ubuntu Note At the time of this writing, the ubuntu-server image only has tags for 20.10 . Official Ubuntu Image The official Ubuntu image may also be used to test the repo. docker run -it --rm --entrypoint /bin/bash ubuntu:22.10 From inside Docker ( export DEBIAN_FRONTEND = noninteractive apt update apt install -y ubuntu-server sudo adduser ubuntu echo \"ubuntu:ubuntu\" | chpasswd usermod -aG sudo ubuntu su ubuntu cd ~ ) Note The above changes are lost once the docker container is exited. MkDocs & MkDocs Material An MkDocs server may be used to serve the dotfiles2 site. MkDocs Material is also required to render the server properly. Task Manual task serve mkdocs serve","title":"Development"},{"location":"development/#development","text":"","title":"Development"},{"location":"development/#docker","text":"","title":" Docker"},{"location":"development/#ubuntu-server-image","text":"The ubuntu-server image may be used to help develop the repo. Task Manual task venv docker run -it --rm --entrypoint /bin/bash -u ubuntu -w /home/ubuntu nicholaswilde/ubuntu-server:22.10 The default username and password for the ubuntu-server image is as follows: Username Password ubuntu ubuntu Note At the time of this writing, the ubuntu-server image only has tags for 20.10 .","title":" Ubuntu Server Image"},{"location":"development/#official-ubuntu-image","text":"The official Ubuntu image may also be used to test the repo. docker run -it --rm --entrypoint /bin/bash ubuntu:22.10 From inside Docker ( export DEBIAN_FRONTEND = noninteractive apt update apt install -y ubuntu-server sudo adduser ubuntu echo \"ubuntu:ubuntu\" | chpasswd usermod -aG sudo ubuntu su ubuntu cd ~ ) Note The above changes are lost once the docker container is exited.","title":" Official Ubuntu Image"},{"location":"development/#mkdocs-mkdocs-material","text":"An MkDocs server may be used to serve the dotfiles2 site. MkDocs Material is also required to render the server properly. Task Manual task serve mkdocs serve","title":" MkDocs &amp; MkDocs Material"},{"location":"usage/","text":"Usage init.sh Script The init.sh script is a remote script used to setup a debian system from scratch. It installs some of the first on the system without having to clone the repository nor perform any other manual tasks. /bin/bash -c \" $( curl -fsSL https://raw.githubusercontent.com/nicholaswilde/dotfiles2/main/scripts/init.sh ) \" The script performs the following tasks: Install Homebrew Homebrew is a package manager that is used to install the stuff you need that Apple (or your Linux system) didn't. Installing brew with the init.sh script allows the ease of installation for go-task and lastpass-cli . Note brew is not available for arm systems . The Homebrew installation also adds the bash completion to the ~/.profile file but needs to be manually sourced. The build-essential apt package is also installed. Install Task Task is a task runner / build tool that aims to be simpler and easier to use than, for example, GNU Make. The dotfiles2 repo uses Task to easily install the dotfiles as well as perform other tasks. Run task to list the current list of tasks supported by the repo. task task: Available tasks for this project: * dotfiles: Install dotfiles * export: Export brew formulas * import: Import brew formulas * init: Initialize remote dotfiles * init-local: Initialize local dotfiles * serve: Serve an mkdocs server * venv: Run virtual environment Note The tasks listed above may be out of date to the actual tasks in the repo. Install lastpass-cli lastpass-cli is a command line tool for LastPass and is used to store and retrieve the SSH and GPG keys. The lastpass-cli command will also prompt you to login. ... == > lastpass-cli Bash completion has been installed to: /home/linuxbrew/.linuxbrew/etc/bash_completion.d Please enter the LastPass master password for <email@email.com>. Master Password: Setup SSH A private SSH key is imported from lastpass-cli . The script uses either the name of the lastpass-cli entry or the id . The repo also imports the private key from an secure note attachment rather than the Private Key field to reduce the risk of copying and pasting the key incorrectly. The name of the GPG secure note below is ssh . lpass show ssh ssh [ id: 4322045537695550419 ] Language: en-US Bit Strength: Format: Passphrase: None Private Key: -----BEGIN OPENSSH PRIVATE KEY----- Public Key: ssh-rsa .... Hostname: Date: June,22,2021 NoteType: SSH Key att-4322045537695550419-20689: id_rsa.txt The secret key is saved in a text file titled id_rsa.txt and saved as attachment att-4322045537695550419-20689 . Note LastPass only saves attachments with certain file extensions and so the id_rsa file needs to be saved with a *.txt file extensions before saving it as a LastPass attachment. The script also imports the public SSH key from GitHub using the ssh-import-id-gh command from the ssh-import-id apt package . Example public key URL: https://github.com/nicholaswilde.keys Setup GPG A private GPG key is imported from lastpass-cli . The script uses either the name of the lastpass-cli entry or the id . The repo also imports the private key from an secure note attachment rather than the Private Key field to reduce the risk of copying and pasting the key incorrectly. The name of the GPG secure note below is gpg . lpass show gpg gpg [ id: 8017296795546256342 ] Date: June,20,2022 Hostname: Public Key: -----BEGIN PGP PUBLIC KEY BLOCK----- Private Key: -----BEGIN PGP PRIVATE KEY BLOCK----- Passphrase: None Format: Bit Strength: Language: en-US NoteType: SSH Key att-8017296795546256342-55097: secret-key-backup.asc.txt Notes: The secret key is saved in a text file titled secret-key-backup.asc.txt and saved as attachment att-8017296795546256342-55097 . The script also refreshes the key from the Ubuntu keyserver . ... gpg: refreshing 1 key from hkp://keyserver.ubuntu.com gpg: key F08AD0AD08B7D7A3: \"Nicholas Wilde <ncwilde43@gmail.com>\" 1 new signature gpg: Total number processed: 1 gpg: new signatures: 1 ... Clone dotfiles2 Repository The repo is cloned using the GitHub SSH URL to enable the ease of connection with the remote repo. When cloning, git will prompt whether you'd like to continue connecting. Type yes and enter to continue the connection. ... == > Clone repo Cloning into '/home/ubuntu/git/nicholaswilde/dotfiles2' ... The authenticity of host 'github.com (192.30.255.112)' can ' t be established. ED25519 key fingerprint is SHA256:+DiY3wvvV6TuJJhbpZisF/zLDA0zPMSvHdkr4UvCOqU. This key is not known by any other names Are you sure you want to continue connecting ( yes/no/ [ fingerprint ]) ? init.sh Completion There currently isn't a way to source the dotfiles in the current shell using the init.sh script. Therefore, the .profile file needs to be manually sourced. ... == > dotfiles init complete - Source the profile file to gain access to brew commands: source ~/.profile Dotfiles Repo Installation The dotfiles are installed as symbolic links to the home folder pointing to the repository location. That way when the dotfiles are updated in the home folder, the repo sees the files as modified and can be then updated and pushed to the remote repo. The dotfiles can be installed by running the following commands: cd /home/ubuntu/git/nicholaswilde/dotfiles2 task dotfiles Warning Ensure that your current dotfiles in the home directory are backed up before installing the repo dotfiles. Warning There currently is not an automatic way of uninstalling the dotfiles once installed. Homebrew Formulas Homebrew formulas are automatically backed up to the formulas file when the reload alias is ran. The formulas import and backup may also be manually ran by running the following commands: Task Manual # Import brew formulas from the formulas file. task import # Export brew formulas to the formulas file. task export # Import brew formulas from the formulas file. brew leaves > formulas # Export brew formulas to the formulas file. brew install $( cat formulas ) Apt Packages Apt package names are manually backed up to the packages file . The packages install may also be manually ran by running the following commands: Task Manual # Install apt packages from the packages file. task apt # Install apt packages from the packages file. sudo apt install $( cat packages ) Dotfiles Symbolic links are created from the home directory to the repo so that when the dotfiles are updated, the repo sees the updates and the changes can be committed to the remote repo. The reload alias, located in .bash_aliases is used to reload the dotfiles in the current shell and upload the messageless dotfile changes to the remote repo. Workflow Make changes to a dotfiles, such as .bash_aliases . Reload the dotfiles by using the reload alias. .bash* Files The default Ubuntu distro both the .bashrc and .bash_aliases files to separate the profile settings from the aliases. This same concept is used to separate aliases, functions, exports, and completions. File name Description .bash_aliases A list of bash aliases .bash_completions A list of bash completions .bash_exports A list of bash exports, such as PATH .bash_functions A list of bash functions, such as mkcdir .bashrc The main bash file that loads all other bash files Common aliases and functions that I like to use are upgrate , reload , up , and mkcdir . Note The bash dotfiles check that some applications are installed before loading some aliases and functions to ensure that the aliases and functions still work. E.g. mc for alias mv='mc mv' . Config Files Config files are stored in the .config repo directory and linked to the ~/.config/ directory. Use the following command to manually link other .config files. From the repo directory ln -snf \" $( pwd ) /.config/gh/config.yml\" \" ${ HOME } /.config/gh/config.yml\" List the directory to ensure that the link was created properly. ls -la ~/.config/gh total 12 drwxr-xr-x 2 ubuntu ubuntu 4096 Jul 24 22 :40 . drwxr-xr-x 4 ubuntu ubuntu 4096 Jul 24 22 :40 .. lrwxrwxrwx 1 ubuntu ubuntu 62 Jul 24 22 :40 config.yml -> /home/ubuntu/git/nicholaswilde/dotfiles2/.config/gh/config.yml See the [configuration page][./configuration.md] for how to add these files to the Taskfile.yaml file .","title":"Usage"},{"location":"usage/#usage","text":"","title":"Usage"},{"location":"usage/#initsh-script","text":"The init.sh script is a remote script used to setup a debian system from scratch. It installs some of the first on the system without having to clone the repository nor perform any other manual tasks. /bin/bash -c \" $( curl -fsSL https://raw.githubusercontent.com/nicholaswilde/dotfiles2/main/scripts/init.sh ) \" The script performs the following tasks:","title":"init.sh Script"},{"location":"usage/#install-homebrew","text":"Homebrew is a package manager that is used to install the stuff you need that Apple (or your Linux system) didn't. Installing brew with the init.sh script allows the ease of installation for go-task and lastpass-cli . Note brew is not available for arm systems . The Homebrew installation also adds the bash completion to the ~/.profile file but needs to be manually sourced. The build-essential apt package is also installed.","title":"Install Homebrew"},{"location":"usage/#install-task","text":"Task is a task runner / build tool that aims to be simpler and easier to use than, for example, GNU Make. The dotfiles2 repo uses Task to easily install the dotfiles as well as perform other tasks. Run task to list the current list of tasks supported by the repo. task task: Available tasks for this project: * dotfiles: Install dotfiles * export: Export brew formulas * import: Import brew formulas * init: Initialize remote dotfiles * init-local: Initialize local dotfiles * serve: Serve an mkdocs server * venv: Run virtual environment Note The tasks listed above may be out of date to the actual tasks in the repo.","title":"Install Task"},{"location":"usage/#install-lastpass-cli","text":"lastpass-cli is a command line tool for LastPass and is used to store and retrieve the SSH and GPG keys. The lastpass-cli command will also prompt you to login. ... == > lastpass-cli Bash completion has been installed to: /home/linuxbrew/.linuxbrew/etc/bash_completion.d Please enter the LastPass master password for <email@email.com>. Master Password:","title":"Install lastpass-cli"},{"location":"usage/#setup-ssh","text":"A private SSH key is imported from lastpass-cli . The script uses either the name of the lastpass-cli entry or the id . The repo also imports the private key from an secure note attachment rather than the Private Key field to reduce the risk of copying and pasting the key incorrectly. The name of the GPG secure note below is ssh . lpass show ssh ssh [ id: 4322045537695550419 ] Language: en-US Bit Strength: Format: Passphrase: None Private Key: -----BEGIN OPENSSH PRIVATE KEY----- Public Key: ssh-rsa .... Hostname: Date: June,22,2021 NoteType: SSH Key att-4322045537695550419-20689: id_rsa.txt The secret key is saved in a text file titled id_rsa.txt and saved as attachment att-4322045537695550419-20689 . Note LastPass only saves attachments with certain file extensions and so the id_rsa file needs to be saved with a *.txt file extensions before saving it as a LastPass attachment. The script also imports the public SSH key from GitHub using the ssh-import-id-gh command from the ssh-import-id apt package . Example public key URL: https://github.com/nicholaswilde.keys","title":" Setup SSH"},{"location":"usage/#setup-gpg","text":"A private GPG key is imported from lastpass-cli . The script uses either the name of the lastpass-cli entry or the id . The repo also imports the private key from an secure note attachment rather than the Private Key field to reduce the risk of copying and pasting the key incorrectly. The name of the GPG secure note below is gpg . lpass show gpg gpg [ id: 8017296795546256342 ] Date: June,20,2022 Hostname: Public Key: -----BEGIN PGP PUBLIC KEY BLOCK----- Private Key: -----BEGIN PGP PRIVATE KEY BLOCK----- Passphrase: None Format: Bit Strength: Language: en-US NoteType: SSH Key att-8017296795546256342-55097: secret-key-backup.asc.txt Notes: The secret key is saved in a text file titled secret-key-backup.asc.txt and saved as attachment att-8017296795546256342-55097 . The script also refreshes the key from the Ubuntu keyserver . ... gpg: refreshing 1 key from hkp://keyserver.ubuntu.com gpg: key F08AD0AD08B7D7A3: \"Nicholas Wilde <ncwilde43@gmail.com>\" 1 new signature gpg: Total number processed: 1 gpg: new signatures: 1 ...","title":"Setup GPG"},{"location":"usage/#clone-dotfiles2-repository","text":"The repo is cloned using the GitHub SSH URL to enable the ease of connection with the remote repo. When cloning, git will prompt whether you'd like to continue connecting. Type yes and enter to continue the connection. ... == > Clone repo Cloning into '/home/ubuntu/git/nicholaswilde/dotfiles2' ... The authenticity of host 'github.com (192.30.255.112)' can ' t be established. ED25519 key fingerprint is SHA256:+DiY3wvvV6TuJJhbpZisF/zLDA0zPMSvHdkr4UvCOqU. This key is not known by any other names Are you sure you want to continue connecting ( yes/no/ [ fingerprint ]) ?","title":"Clone dotfiles2 Repository"},{"location":"usage/#initsh-completion","text":"There currently isn't a way to source the dotfiles in the current shell using the init.sh script. Therefore, the .profile file needs to be manually sourced. ... == > dotfiles init complete - Source the profile file to gain access to brew commands: source ~/.profile","title":"init.sh Completion"},{"location":"usage/#dotfiles-repo","text":"","title":"Dotfiles Repo"},{"location":"usage/#installation","text":"The dotfiles are installed as symbolic links to the home folder pointing to the repository location. That way when the dotfiles are updated in the home folder, the repo sees the files as modified and can be then updated and pushed to the remote repo. The dotfiles can be installed by running the following commands: cd /home/ubuntu/git/nicholaswilde/dotfiles2 task dotfiles Warning Ensure that your current dotfiles in the home directory are backed up before installing the repo dotfiles. Warning There currently is not an automatic way of uninstalling the dotfiles once installed.","title":"Installation"},{"location":"usage/#homebrew-formulas","text":"Homebrew formulas are automatically backed up to the formulas file when the reload alias is ran. The formulas import and backup may also be manually ran by running the following commands: Task Manual # Import brew formulas from the formulas file. task import # Export brew formulas to the formulas file. task export # Import brew formulas from the formulas file. brew leaves > formulas # Export brew formulas to the formulas file. brew install $( cat formulas )","title":"Homebrew Formulas"},{"location":"usage/#apt-packages","text":"Apt package names are manually backed up to the packages file . The packages install may also be manually ran by running the following commands: Task Manual # Install apt packages from the packages file. task apt # Install apt packages from the packages file. sudo apt install $( cat packages )","title":"Apt Packages"},{"location":"usage/#dotfiles","text":"Symbolic links are created from the home directory to the repo so that when the dotfiles are updated, the repo sees the updates and the changes can be committed to the remote repo. The reload alias, located in .bash_aliases is used to reload the dotfiles in the current shell and upload the messageless dotfile changes to the remote repo.","title":"Dotfiles"},{"location":"usage/#workflow","text":"Make changes to a dotfiles, such as .bash_aliases . Reload the dotfiles by using the reload alias.","title":"Workflow"},{"location":"usage/#bash-files","text":"The default Ubuntu distro both the .bashrc and .bash_aliases files to separate the profile settings from the aliases. This same concept is used to separate aliases, functions, exports, and completions. File name Description .bash_aliases A list of bash aliases .bash_completions A list of bash completions .bash_exports A list of bash exports, such as PATH .bash_functions A list of bash functions, such as mkcdir .bashrc The main bash file that loads all other bash files Common aliases and functions that I like to use are upgrate , reload , up , and mkcdir . Note The bash dotfiles check that some applications are installed before loading some aliases and functions to ensure that the aliases and functions still work. E.g. mc for alias mv='mc mv' .","title":".bash* Files"},{"location":"usage/#config-files","text":"Config files are stored in the .config repo directory and linked to the ~/.config/ directory. Use the following command to manually link other .config files. From the repo directory ln -snf \" $( pwd ) /.config/gh/config.yml\" \" ${ HOME } /.config/gh/config.yml\" List the directory to ensure that the link was created properly. ls -la ~/.config/gh total 12 drwxr-xr-x 2 ubuntu ubuntu 4096 Jul 24 22 :40 . drwxr-xr-x 4 ubuntu ubuntu 4096 Jul 24 22 :40 .. lrwxrwxrwx 1 ubuntu ubuntu 62 Jul 24 22 :40 config.yml -> /home/ubuntu/git/nicholaswilde/dotfiles2/.config/gh/config.yml See the [configuration page][./configuration.md] for how to add these files to the Taskfile.yaml file .","title":"Config Files"}]}